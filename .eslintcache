[{"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\index.tsx":"1","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\redux\\state.ts":"2","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\App.tsx":"3","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\redux\\currencyReducer.ts":"4","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx":"5","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"6","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\redux\\actions.ts":"7","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"8","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson3\\Lesson3.tsx":"9","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson3\\lesson_3.ts":"10","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson3\\API.ts":"11"},{"size":319,"mtime":1648714077976,"results":"12","hashOfConfig":"13"},{"size":286,"mtime":1648714080626,"results":"14","hashOfConfig":"13"},{"size":661,"mtime":1649930414055,"results":"15","hashOfConfig":"13"},{"size":1916,"mtime":1648732584910,"results":"16","hashOfConfig":"13"},{"size":860,"mtime":1648746696747,"results":"17","hashOfConfig":"13"},{"size":5861,"mtime":1648750380846,"results":"18","hashOfConfig":"13"},{"size":1454,"mtime":1648728011571,"results":"19","hashOfConfig":"13"},{"size":3871,"mtime":1648714078397,"results":"20","hashOfConfig":"13"},{"size":1599,"mtime":1648714078788,"results":"21","hashOfConfig":"13"},{"size":2954,"mtime":1649934873531,"results":"22","hashOfConfig":"13"},{"size":326,"mtime":1648714078725,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"lymlwi",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\index.tsx",[],["48","49"],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\redux\\state.ts",[],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\App.tsx",["50"],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\redux\\currencyReducer.ts",[],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["51","52"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyType, selectCurrencyState} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\n\r\n// const CurrencyEContainer: React.FC<TProps> = props => {\r\nconst CurrencyEContainer: React.FC = () => {\r\n\r\n    /* const {\r\n         currencies,\r\n         currentCurrency,\r\n         isBuying,\r\n         amountOfBYN,\r\n         amountOfCurrency,\r\n         setCurrencyAmount,\r\n         setAction,\r\n         changeCurrency,\r\n     } = props;*/\r\n\r\n    /*const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n        ChangeActionAC,\r\n        ChangeCurrencyFieldAC,\r\n        ChangeCurrentCurrencyAC,\r\n    } = props;*/\r\n\r\n    /*const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = props;*/\r\n\r\n    const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>()\r\n\r\n    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = useSelector(selectCurrencyState);\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    /* setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));*/\r\n                    /* ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));*/\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    /*setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);*/\r\n                    /*ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);*/\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        /*e.currentTarget.dataset.action === 'buy' ? ChangeActionAC(true) : ChangeActionAC(false);*/\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        // e.currentTarget.dataset.currency && ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n/*\r\nconst mapStateToProps = ({currency}: { currency: CurrencyState }): CurrencyState => {\r\n    return {\r\n        currencies: currency.currencies,\r\n        currentCurrency: currency.currentCurrency,\r\n        isBuying: currency.isBuying,\r\n        amountOfBYN: currency.amountOfBYN,\r\n        amountOfCurrency: currency.amountOfCurrency,\r\n    };\r\n};\r\n*/\r\n\r\n/*\r\nconst mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) : any => {\r\n    return {\r\n        setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n            dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n        },\r\n        setAction(isBuying: boolean) {\r\n            dispatch(ChangeActionAC(isBuying));\r\n        },\r\n        changeCurrency(currency: string) {\r\n            dispatch(ChangeCurrentCurrencyAC(currency));\r\n        },\r\n    };\r\n};\r\n*/\r\n\r\n\r\n/*const connector = connect(mapStateToProps, {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n});*/\r\n\r\n/*const connector = connect(mapStateToProps, {});\r\n\r\ntype TProps = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CurrencyEContainer);*/\r\n\r\nexport default CurrencyEContainer","D:\\it-incubator\\JS_TS\\JS Lessons\\src\\redux\\actions.ts",[],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson3\\Lesson3.tsx",["53","54"],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson3\\lesson_3.ts",["55","56"],"D:\\it-incubator\\JS_TS\\JS Lessons\\src\\lessons\\lesson3\\API.ts",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":11,"column":9,"nodeType":"65","messageId":"66","endLine":11,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":11,"column":18,"nodeType":"65","messageId":"66","endLine":11,"endColumn":32},{"ruleId":"63","severity":1,"message":"69","line":7,"column":26,"nodeType":"65","messageId":"66","endLine":7,"endColumn":41},{"ruleId":"63","severity":1,"message":"70","line":9,"column":32,"nodeType":"65","messageId":"66","endLine":9,"endColumn":53},{"ruleId":"63","severity":1,"message":"71","line":1,"column":9,"nodeType":"65","messageId":"66","endLine":1,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":111,"column":1,"nodeType":"74","endLine":112,"endColumn":3},{"ruleId":"63","severity":1,"message":"75","line":6,"column":7,"nodeType":"65","messageId":"66","endLine":6,"endColumn":10},{"ruleId":"63","severity":1,"message":"76","line":7,"column":7,"nodeType":"65","messageId":"66","endLine":7,"endColumn":20},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'Lesson1' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'setSerachResult' is assigned a value but never used.","'setSerachResultByType' is assigned a value but never used.","'rejects' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'key' is assigned a value but never used.","'axiosInstance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]